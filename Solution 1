// Q1. Check if the given point lies inside or outside a polygon?


struct Point {
      float x, y;
};

struct line {
      Point p1, p2;
};

int direction(Point a, Point b, Point c) {
      int val = (b.y-a.y)*(c.x-b.x)-(b.x-a.x)*(c.y-b.y);
   if (val == 0)
       return 0;           
   else if(val < 0)
       return 2;          
       return 1;          
}

bool PointonLine(line l, Point p) {        
      if(p.x <= max(l.p1.x, l.p2.x) && p.x <= min(l.p1.x, l.p2.x) &&
          (p.y <= max(l.p1.y, l.p2.y) && p.y <= min(l.p1.y, l.p2.y)))
             return true;

       return false;
}

bool IsLineIntersect(line l1, line l2) {
   
     float dir1 = direction(l1.p1, l1.p2, l2.p1);
     float dir2 = direction(l1.p1, l1.p2, l2.p2);
     float dir3 = direction(l2.p1, l2.p2, l1.p1);
     float dir4 = direction(l2.p1, l2.p2, l1.p2);

   if(dir1 != dir2 && dir3 != dir4)
        return true;
      
   if(dir1==0 && PointonLine(l1, l2.p1))        
        return true;
      
   if(dir2==0 && PointonLine(l1, l2.p2))         
        return true;
      
   if(dir3==0 && PointonLine(l2, l1.p1))       
        return true;
      
   if(dir4==0 && PointonLine(l2, l1.p2)) 
        return true;
      
     return false;
}

bool checkPointInside(Point polygon[], int n, Point p) {
   if(n < 3)
        return false;                 
   line exline = {p, {9999, p.y}};   
   int count = 0;
   int i = 0;
   do {
        line side = {polygon[i], polygon[(i+1)%n]};     
      if(IsLineIntersect(side, exline)) {          
          if(direction(side.p1, p, side.p2) == 0)
              return PointonLine(side, p);
         count++;
      }
      i = (i+1)%n;
   } while(i != 0);
         return count&1;             
}




/* int main() {
  
   Point polygon[] = {{-3, 2}, {-2, -0.8}, {0, 1.2}, {2.2, 0},{2, 4.5}};
   Point p = {0, 0};
   int n = sizeof(polygon)/sizeof(polygon[0]);

   if(checkPointInside(polygon, n, p))
      cout << "TRUE";
   else
      cout << "FALSE";
} */
